<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置数据源druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="defaultAutoCommit" value="true" />
	</bean>
	<!-- 配置sessionfactory -->
	<bean id="sqlSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<property name="mappingLocations" value="com/bill/entity/*.xml"></property>

	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="useropeator" class="com.bill.daoimpl.UserOperateImpl">
		<property name="sessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<!-- 1tx方式配置hibernate事务管理器 OK -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="*" read-only="false"/> </tx:attributes> 
		</tx:advice> <aop:config> <aop:pointcut expression="execution(* com.bill.dao.*.*(..))" 
		id="allManagerMethod"/> <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/> 
		</aop:config> -->
	<!-- 2spring注解配置 hibernate事务OK -->

	<!-- <context:annotation-config/> <context:component-scan base-package="com.bill.daoimpl"></context:component-scan> 
		<tx:annotation-driven transaction-manager="transactionManager"/> -->

	<!-- 3拦截器方式配置 OK -->
	<!-- <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor"> 
		<property name="transactionManager" ref="transactionManager" /> <property 
		name="transactionAttributes"> <props> <prop key="*">PROPAGATION_REQUIRED</prop> 
		</props> </property> </bean> <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> 
		<property name="beanNames"> <list> <value>user*</value> </list> </property> 
		<property name="interceptorNames"> <list> <value>transactionInterceptor</value> 
		</list> </property> </bean> -->
	<!--4 每个bean都有一个代理 -->
	<bean id="userDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="useropeator" />
		<property name="proxyInterfaces" value="com.bill.dao.IOperate" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<!-- 5所有bean共用同一个代理 OK -->
<!-- 	<bean id="base"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		lazy-init="true" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="userDao" class="com.bill.daoimpl.UserOperateImpl">
		<property name="sessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="userDaoAgency" parent="base">
		<property name="target" ref="userDao" />
	</bean> -->
</beans>
